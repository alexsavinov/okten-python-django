version: "3.7"

services:
  app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    restart: on-failure
    command: >
      sh -c "python manage.py wait_for_db && 
      python manage.py makemigrations && 
      python manage.py migrate && 
      python manage.py runserver 0.0.0.0:8000"

  db:
    image: mysql:8
    ports:
      - "3308:3306"
    env_file:
      - .env
    restart: on-failure
    volumes:
      - ./mysql:/var/lib/mysql

  web:
    image: nginx:alpine
    ports:
      - "80:80"
    restart: on-failure
    volumes:
      - ./frontend:/usr/share/nginx/html/front
      - ./backend/static://usr/share/nginx/html/doc
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  redis:
    image: redis
    restart: on-failure

  celery:
    build:
      context: .
    volumes:
      - ./backend:/app
    env_file:
      - .env
    restart: on-failure
    command: >
      celery -A config worker -l info -B